// @ts-nocheck
import { ScreenOrientation } from '../../common';
export class UnistylesMockedRuntime {
  constructor(unistylesBridge, unistylesRegistry) {
    this.unistylesBridge = unistylesBridge;
    this.unistylesRegistry = unistylesRegistry;
    this.unistylesRegistry = unistylesRegistry;
  }
  get colorScheme() {
    return 'dark';
  }
  get hasAdaptiveThemes() {
    return true;
  }
  get themeName() {
    return this.unistylesRegistry.themeNames.length > 0 ? this.unistylesRegistry.themeNames.at(0) : undefined;
  }
  get contentSizeCategory() {
    return 'unspecified';
  }
  get breakpoint() {
    if (this.unistylesRegistry.sortedBreakpointPairs.length === 0) {
      return undefined;
    }
    const firstBreakpoint = this.unistylesRegistry.sortedBreakpointPairs.at(0);
    return firstBreakpoint ? firstBreakpoint.at(0) : undefined;
  }
  get breakpoints() {
    return this.unistylesRegistry.breakpoints;
  }
  get enabledPlugins() {
    return this.unistylesRegistry.plugins;
  }
  get screen() {
    return {
      width: 360,
      height: 800
    };
  }
  get insets() {
    return {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
  }
  get statusBar() {
    return {
      height: 24,
      width: 800
    };
  }
  get navigationBar() {
    return {
      height: 0,
      width: 0
    };
  }
  get orientation() {
    return ScreenOrientation.Portrait;
  }
  setTheme = name => true;
  updateTheme = (name, theme) => {};
  setAdaptiveThemes = enabled => {};
  addPlugin = plugin => {};
  removePlugin = plugin => {};
}
//# sourceMappingURL=UnistylesMockedRuntime.js.map